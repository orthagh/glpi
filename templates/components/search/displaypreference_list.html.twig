{#
 # ---------------------------------------------------------------------
 #
 # GLPI - Gestionnaire Libre de Parc Informatique
 #
 # http://glpi-project.org
 #
 # @copyright 2015-2025 Teclib' and contributors.
 # @copyright 2003-2014 by the INDEPNET Development Team.
 # @licence   https://www.gnu.org/licenses/gpl-3.0.html
 #
 # ---------------------------------------------------------------------
 #
 # LICENSE
 #
 # This file is part of GLPI.
 #
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation, either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <https://www.gnu.org/licenses/>.
 #
 # ---------------------------------------------------------------------
 #}

{% import 'components/form/basic_inputs_macros.html.twig' as inputs %}
{% import 'components/form/fields_macros.html.twig' as fields %}

{% if preferences|length > 0 %}
    {{ fields.largeTitle(__('Search result display'), 'ti ti-columns-3') }}

    <form id="massDisplayPreference{{ rand }}" method="get" action="{{ path('front/massiveaction.php') }}"
        data-search-itemtype="DisplayPreference" data-submit-once>
            {% if massiveactionparams['specific_actions']|length > 0 %}
                {% do call('Html::showMassiveActions', [massiveactionparams]) %}
            {% endif %}
            {{ inputs.hidden('users_id', users_id, {
                'data-glpicore-ma-tags': 'common'
            }) }}
            <a role="button" title='{{ __('Select all') }}' class="btn btn-sm btn-outline me-2" id="select-all-checkboxes">
                <i class="ti ti-copy-check"></i>
                <span>{{ __('(Un)select all') }}</span>
            </a>
        <div class="row display-prefs-list">
        {% for pref in preferences %}
            {% set name = pref['itemtype']|itemtype_name(1)|default(pref['itemtype']) %}
            {% set icon = pref['itemtype']|itemtype_icon %}
            {# <div class="col-md-6 col-xl-3">
                <div class="card card-sm">
                    <div class="card-body">
                        <div class="d-flex align-items-center justify-content-between">
                            <div class="d-flex align-items-center">
                                <div class="col-auto">
                                    <span class="avatar me-2"><i class="{{ icon }}"></i></span>
                                </div>
                                <div>
                                    <div class="font-weight-medium">
                                        <button type="button" class="btn btn-link p-0 btn-itemtype-pref" data-itemtype="{{ pref['itemtype'] }}">{{ name }}</button>
                                    </div>
                                    <div class="text-secondary">{{ pref['nb'] }} {{ __('columns') }}</div>
                                </div>
                            </div>
                            {% if massiveactionparams['specific_actions']|length > 0 %}
                                <div>
                                    {% do call('Html::showMassiveActionCheckBox', ['DisplayPreference', pref['itemtype']]) %}
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div> #}

            <div class="col-12 col-lg-6 col-xxl-4 mb-2">
                <label class="form-selectgroup-boxes flex-fill w-100 h-100" style="min-height: 70px;">
                    {% if massiveactionparams['specific_actions']|length > 0 %}
                        {% do call('Html::showMassiveActionCheckBox', ['DisplayPreference', pref['itemtype'], {
                            'class': 'form-selectgroup-input massive_action_checkbox'
                        }]) %}
                    {% endif %}
                    <div class="form-selectgroup-label d-flex align-items-center h-100 shadow-none p-0 px-3">
                        <span class="me-2 mt-1">
                            <i class="{{ icon }} fa-2x text-secondary"></i>
                        </span>
                        <div class="text-start">
                            <div class="fw-bold">
                                {{ name }}
                            </div>
                            <small class="form-hint">
                                {{ pref['nb'] }} {{ __('columns') }}
                            </small>
                        </div>

                        <div class="me-2 ms-auto">
                            <span class="form-selectgroup-check"></span>
                        </div>
                    </div>
                </label>
            </div>
        {% endfor %}
        </div>
    </form>
    <template id="displaypreference_modal_template{{ rand }}">
        {{ include('components/search/displaypreference_modal.html.twig', {
            rand: rand,
            itemtype: '__VALUE__',
        }) }}
    </template>
    <script>
        $(() => {
            $('div.display-prefs-list button.btn-itemtype-pref').on('click', (e) => {
                const itemtype = $(e.currentTarget).attr('data-itemtype');
                const itemtype_name = $(e.currentTarget).text();
                $('#displayprefence_modal{{ rand }}').remove();
                const modal = $($('#displaypreference_modal_template{{ rand }}').html());
                const default_src = modal.find('iframe').attr('src');
                const forced_tab = "{{ users_id > 0 ? 'DisplayPreference$2' : 'DisplayPreference$1' }}"
                const replacement = `${itemtype}&forcetab=${forced_tab}&no_switch=1`;
                modal.find('iframe').attr('src', default_src.replace('__VALUE__', replacement));
                modal.find('.modal-header h4').text(modal.find('.modal-header h4').text() + ' - ' + itemtype_name);
                modal.appendTo('body').modal('show');
            });

                        // (un)toggle all capacities button
            $('#select-all-checkboxes').on('click', function() {
                var $checkboxes = $('input.massive_action_checkbox');
                var $checkedCheckboxes = $checkboxes.filter(':checked');
                if ($checkedCheckboxes.length === $checkboxes.length) {
                    $checkboxes.prop('checked', false);
                } else {
                    $checkboxes.prop('checked', true);
                }
                $checkboxes.trigger('change');
            });
        });
    </script>
{% else %}
    <div class="alert alert-info">
        {{ __('No item found') }}
    </div>
{% endif %}
